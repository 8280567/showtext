#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
showtext: Using System Fonts in R Graphics
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Section
Existing methods to use fonts
\end_layout

\begin_layout Subsection
Built-in graphics devices in R
\end_layout

\begin_layout Standard
It's possible to let R's built-in graphics devices, e.g., PNG and PDF, to
 use installed fonts in the system.
 However, the implementation is quite configuration dependent.
 If support for cairographics has been compiled in R, then it's quite straightfo
rward to use system fonts in the plots, for which one only needs to specify
 the family name of font as is displayed in the system.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

if(capabilities("cairo")) {
\end_layout

\begin_layout Plain Layout

    png("builtin-1.png", 672, 384, type = "cairo", res = 96)
\end_layout

\begin_layout Plain Layout

    plot(1, type = "n")
\end_layout

\begin_layout Plain Layout

    text(1, 1, "Consolas", family = "Consolas", cex = 3)
\end_layout

\begin_layout Plain Layout

    dev.off()
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    cairo_pdf("builtin-2.pdf", 7, 4)
\end_layout

\begin_layout Plain Layout

    plot(1, type = "n")
\end_layout

\begin_layout Plain Layout

    text(1, 1, "DejaVu Serif", family = "DejaVu Serif", font = 3, cex =
 3)
\end_layout

\begin_layout Plain Layout

    dev.off()
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename builtin-1.png
	width 49text%

\end_inset


\begin_inset Graphics
	filename builtin-2.pdf
	width 49text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Specify family name when cairographics is compiled in R
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
However, when cairographics is not available, it will require more effort
 to achieve this target.
 For PNG graphs, the user needs to first register a font family name in
 R which is mapped to a font that is installed in the system, and then specify
 the font family name in plotting functions.
 (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:mapping"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename mapping.pdf
	lyxscale 30
	width 70text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagram to show the font mapping in R
\begin_inset CommandInset label
LatexCommand label
name "fig:mapping"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Below is an example to show this procedure on Windows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

if(.Platform$OS.type == "windows") {
\end_layout

\begin_layout Plain Layout

    windowsFonts(comic = "Comic Sans MS")
\end_layout

\begin_layout Plain Layout

    png("builtin-3.png", 672, 384, res = 96)
\end_layout

\begin_layout Plain Layout

    plot(1, type = "n")
\end_layout

\begin_layout Plain Layout

    text(1, 1, "Comic Sans MS", family = "comic", cex = 3)
\end_layout

\begin_layout Plain Layout

    dev.off()
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename builtin-3.png
	width 49text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Use system fonts for PNG on Windows without cairographics
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Notice that we use function 
\family typewriter
windowsFonts()
\family default
 to register font and create name mapping.
 In other operating systems, there are corresponding functions such as 
\family typewriter
X11Fonts()
\family default
 and 
\family typewriter
quartzFonts()
\family default
 to do the similar job.
\end_layout

\begin_layout Standard
When it comes to PDF graphs, things get even more complicated.
 The first step is similar: one should call 
\family typewriter
pdfFonts()
\family default
 to register new family names in R, and then use them in the plot.
 However, the problem is that 
\family typewriter
pdfFonts()
\family default
 requires the metric files (
\family typewriter
.afm
\family default
) for the font, which are not so common for end users.
 As a contrary, TrueType fonts (
\family typewriter
.ttf
\family default
) and OpenType fonts (mostly 
\family typewriter
.otf
\family default
) are the major ones that users are most likely to have.
 Unfortunately, these font formats are not directly supported by 
\family typewriter
pdfFonts()
\family default
.
 Additionally, to make the plot have consistent appearance across different
 PDF views, it is usually suggested to embed the font within the file by
 calling function 
\family typewriter
embedFonts()
\family default
, which further invokes an external software Ghostscript.
 For the details, interested readers are referred to the R News article
 xxx.
\end_layout

\begin_layout Standard
Due to this complexity, when creating PDF graphs most users only select
 the built-in PDF font families, which in R can be queried by the command
 
\family typewriter
names(pdfFonts())
\family default
.
\end_layout

\begin_layout Subsection
Package Cairo
\end_layout

\begin_layout Subsection
Package extrafont
\end_layout

\begin_layout Section
Usage of showtext
\end_layout

\begin_layout Subsection
Registering fonts
\end_layout

\begin_layout Subsection
showtext functions
\end_layout

\begin_layout Subsection
Integration with knitr
\end_layout

\begin_layout Subsection
Limitations
\end_layout

\begin_layout Section
Design of showtext
\end_layout

\end_body
\end_document
