#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
knitr
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\family sans
\series bold
showtext: Using System Fonts in R Graphics
\end_layout

\begin_layout Author
Yixuan Qiu
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Section
Existing methods to use fonts
\end_layout

\begin_layout Subsection
Built-in graphics devices in R
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:built-in"

\end_inset


\end_layout

\begin_layout Standard
It's possible to let R's built-in graphics devices, e.g., PNG and PDF, to
 use installed fonts in the system.
 However, the implementation is quite configuration dependent.
 If support for Cairo graphics
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://cairographics.org/
\end_layout

\end_inset


\end_layout

\end_inset

 has been compiled in R, then it's quite straightforward to use system fonts
 in the plots, for which one only needs to specify the family name of font
 as is displayed in the system.
 (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:builtin_with_cairo"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

library(ggplot2)
\end_layout

\begin_layout Plain Layout

bg = ggplot(NULL, aes(x = 1, y = 1)) + ylim(0.8, 1.2) +
\end_layout

\begin_layout Plain Layout

    theme(axis.title = element_blank(), axis.ticks = element_blank(),
\end_layout

\begin_layout Plain Layout

          axis.text = element_blank())
\end_layout

\begin_layout Plain Layout

if(capabilities("cairo")) {
\end_layout

\begin_layout Plain Layout

    png("builtin-1.png", 672, 384, type = "cairo", res = 96)
\end_layout

\begin_layout Plain Layout

    txt1 = annotate("text", 1, 1, label = "DejaVu Sans Mono",
\end_layout

\begin_layout Plain Layout

                    family = "DejaVu Sans Mono", size = 15)
\end_layout

\begin_layout Plain Layout

    print(bg + txt1)
\end_layout

\begin_layout Plain Layout

    dev.off()
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    cairo_pdf("builtin-2.pdf", 7, 4)
\end_layout

\begin_layout Plain Layout

    txt2 = annotate("text", 1, 1, label = "DejaVu Serif Italic",
\end_layout

\begin_layout Plain Layout

                    family = "DejaVu Serif", fontface = "italic", size =
 15)
\end_layout

\begin_layout Plain Layout

    print(bg + txt2)
\end_layout

\begin_layout Plain Layout

    dev.off()
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename builtin-1.png
	width 49text%

\end_inset


\begin_inset Graphics
	filename builtin-2.pdf
	width 49text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:builtin_with_cairo"

\end_inset

Specify family name when Cairo graphics is compiled in R.
 
\emph on
Left
\emph default
: PNG graph; 
\emph on
right
\emph default
: PDF graph
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
However, when Cairo graphics is not available, it will require more effort
 to achieve this target.
 For PNG graphs, the user needs to first register a font family name in
 R which is mapped to a font that is installed in the system, and then specify
 the font family name in plotting functions.
 (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:mapping"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename mapping.pdf
	lyxscale 30
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagram to show the font mapping in R
\begin_inset CommandInset label
LatexCommand label
name "fig:mapping"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Below is an example to show this procedure on Windows.
 (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:builtin_png_windows"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

if(.Platform$OS.type == "windows") {
\end_layout

\begin_layout Plain Layout

    windowsFonts(comic = "Comic Sans MS")
\end_layout

\begin_layout Plain Layout

    png("builtin-3.png", 672, 384, res = 96)
\end_layout

\begin_layout Plain Layout

    txt3 = annotate("text", 1, 1, label = "Comic Sans MS", family = "comic",
 size = 25)
\end_layout

\begin_layout Plain Layout

    print(bg + txt3)
\end_layout

\begin_layout Plain Layout

    dev.off()
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename builtin-3.png
	width 49text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:builtin_png_windows"

\end_inset

Use system fonts for PNG on Windows without Cairo graphics
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Notice that we use function 
\family typewriter
windowsFonts()
\family default
 to register font and create name mapping.
 In other operating systems, there are corresponding functions such as 
\family typewriter
X11Fonts()
\family default
 and 
\family typewriter
quartzFonts()
\family default
 to do the similar job.
\end_layout

\begin_layout Standard
When it comes to PDF graphs, things get even more complicated.
 The first step is similar: one should call 
\family typewriter
pdfFonts()
\family default
 to register new family names in R, and then use them in the plot.
 However, the problem is that 
\family typewriter
pdfFonts()
\family default
 requires the metric files (
\family typewriter
.afm
\family default
) for the font, which are not so common for end users.
 As a contrary, TrueType fonts (
\family typewriter
.ttf
\family default
) and OpenType fonts (mostly 
\family typewriter
.otf
\family default
) are what users most likely to have, but unfortunately, these font formats
 are not directly supported by 
\family typewriter
pdfFonts()
\family default
.
 Additionally, to make the plot have consistent appearance across different
 PDF viewers, it is usually suggested to embed the font within the file
 by calling function 
\family typewriter
embedFonts()
\family default
, which further invokes an external software Ghostscript
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.ghostscript.com/
\end_layout

\end_inset


\end_layout

\end_inset

.
 For the details, interested readers are referred to the R News article
 
\begin_inset CommandInset citation
LatexCommand citet
key "nonstdfonts"

\end_inset

.
\end_layout

\begin_layout Standard
Due to this complexity, when creating PDF graphs most users only select
 the built-in PDF font families, which in R can be queried by the command
 
\family typewriter
names(pdfFonts())
\family default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

names(pdfFonts())
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
The Cairo package
\end_layout

\begin_layout Standard
The 
\series bold
Cairo
\series default
 package 
\begin_inset CommandInset citation
LatexCommand citet
key "Cairo"

\end_inset

 provides a number of high-quality graphics devices that are driven by a
 unified backend based on Cairo graphics.
 When the Cairo library is configured with FreeType and Fontcofig support,
 one can make use of the 
\family typewriter
CairoFonts()
\family default
 function to specify the fonts that will be used by all the devices in 
\series bold
Cairo
\series default
.
 Below is an example to show this.
 (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:cairo_package"

\end_inset

, left)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

library(Cairo)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

CairoFonts(regular = "Liberation Sans:style=Regular",
\end_layout

\begin_layout Plain Layout

           italic = "Liberation Serif:style=Italic")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

CairoPDF("Cairo-1.pdf", 7, 4)
\end_layout

\begin_layout Plain Layout

txt4 = annotate("text", 1, 1.1, label = "Liberation", size = 20)
\end_layout

\begin_layout Plain Layout

txt5 = annotate("text", 1, 0.9, label = "Liberation", fontface = "italic",
 size = 20)
\end_layout

\begin_layout Plain Layout

print(bg + txt4 + txt5)
\end_layout

\begin_layout Plain Layout

dev.off()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
On systems in which FreeType and Fontcofig are not configured with Cairo
 (e.g., Windows), the method to specify fonts with 
\series bold
Cairo
\series default
 package is similar to that of 
\family typewriter
png(type = "cairo")
\family default
 and 
\family typewriter
cairo_pdf()
\family default
.
 (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:cairo_package"

\end_inset

, right)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

if(.Platform$OS.type == "windows") {
\end_layout

\begin_layout Plain Layout

    CairoPDF("Cairo-2.pdf", 7, 4)
\end_layout

\begin_layout Plain Layout

    txt6 = annotate("text", 1, 1.1, label = "On Windows",
\end_layout

\begin_layout Plain Layout

                    family = "Constantia", size = 15)
\end_layout

\begin_layout Plain Layout

    txt7 = annotate("text", 1, 0.9, label = "Lucida Console",
\end_layout

\begin_layout Plain Layout

                    family = "Lucida Console", size = 15)
\end_layout

\begin_layout Plain Layout

    print(bg + txt6 + txt7)
\end_layout

\begin_layout Plain Layout

    dev.off()
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Cairo-1.pdf
	width 49text%

\end_inset


\begin_inset Graphics
	filename Cairo-2.pdf
	width 49text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:cairo_package"

\end_inset

Specify fonts in the 
\series bold
Cairo
\series default
 package.
 
\emph on
Left
\emph default
: with FreeType and Fontcofig support; 
\emph on
right
\emph default
: without (e.g.
 on Windows)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
The extrafont package
\end_layout

\begin_layout Standard

\series bold
extrafont
\series default
 
\series bold

\begin_inset CommandInset citation
LatexCommand citep
key "extrafont"

\end_inset

 
\series default
is an R pakcage mainly used to simplify the usage of system fonts in PDF
 and PostScript graphics.
 It is able to extract metric files (
\family typewriter
.afm
\family default
) from TrueType fonts (
\family typewriter
.ttf
\family default
) so that R PDF device can utilize that information to place text in graphics.
 This procedure is in effect accomplished by the 
\series bold
Rttf2pt1
\series default
 package 
\begin_inset CommandInset citation
LatexCommand citep
key "Rttf2pt1"

\end_inset

 which 
\series bold
extrafont
\series default
 depends on.
 Also, for the same reason described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:built-in"

\end_inset

, 
\series bold
extrafont
\series default
 provides the function 
\family typewriter
embed_fonts()
\family default
 to call Ghostscript to embed fonts in PDF files.
\end_layout

\begin_layout Standard

\series bold
extrafont
\series default
 requires a first-time configuration, during which it will scan TrueType
 fonts installed in the system and generate metric files from them, along
 with other necessary configuration files.
 After that, one needs to further call 
\family typewriter
loadfonts()
\family default
 to register these fonts in R.
 These two steps only need to be done once.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

## Run once
\end_layout

\begin_layout Plain Layout

library(extrafont)
\end_layout

\begin_layout Plain Layout

font_import()
\end_layout

\begin_layout Plain Layout

loadfonts()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After this set-up, the user could query the available font families for
 PDF device by calling functions 
\family typewriter
fonts()
\family default
 or 
\family typewriter
fonttable()
\family default
, and use them in any plotting functions involving font selection.
 Also recall that the final step is to embed the fonts by calling function
 
\family typewriter
embed_fonts()
\family default
.
 (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:extrafont_package"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

library(extrafont)
\end_layout

\begin_layout Plain Layout

pdf("extrafont-1-unembedded.pdf", 7, 4)
\end_layout

\begin_layout Plain Layout

txt8 = annotate("text", 1, 1.1, label = "Ubuntu Light",
\end_layout

\begin_layout Plain Layout

                family = "Ubuntu Light", size = 15)
\end_layout

\begin_layout Plain Layout

txt9 = annotate("text", 1, 0.9, label = "Ubuntu Condensed",
\end_layout

\begin_layout Plain Layout

                family = "Ubuntu Condensed", size = 15)
\end_layout

\begin_layout Plain Layout

print(bg + txt8 + txt9)
\end_layout

\begin_layout Plain Layout

dev.off()
\end_layout

\begin_layout Plain Layout

embed_fonts("extrafont-1-unembedded.pdf", outfile = "extrafont-1.pdf")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename extrafont-1.pdf
	width 49text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:extrafont_package"

\end_inset

Use 
\series bold
extrafont
\series default
 package to select fonts in PDF device
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The embedding procedure requires the Ghostscript program to be installed
 in the system and findable to R.
 On Windows, the command below is an example to tell R where it is.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

Sys.setenv(R_GSCMD = "C:/Program Files/gs/gs9.05/bin/gswin32c.exe")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
More details about 
\series bold
extrafont
\series default
 can be found in the README file
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://cran.r-project.org/web/packages/extrafont/README.html
\end_layout

\end_inset


\end_layout

\end_inset

 of this package.
\end_layout

\begin_layout Section
Usage of showtext
\end_layout

\begin_layout Subsection
Registering fonts
\end_layout

\begin_layout Subsection
showtext functions
\end_layout

\begin_layout Subsection
Integration with knitr
\end_layout

\begin_layout Subsection
Limitations
\end_layout

\begin_layout Section
Design of showtext
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "ref"
options "bibtotoc,jss"

\end_inset


\end_layout

\end_body
\end_document
